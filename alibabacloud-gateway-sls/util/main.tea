
/**
 * Read data from a readable stream, and parse it by JSON format
 * @param stream the readable stream
 * @return the parsed result
 */
static async function readAndUncompressBlock(stream: readable, compressType: string, bodyRawSize: string): readable

/**
 * Compress data by specified compress type, use isCompressorAvailable to check if the compress type is supported.
 * @param src the data to be compressed
 * @param compressType the compress type
 * @return the compressed data
 * @throws error if the compress type is not supported or the compress failed
 */
static async function compress(src: bytes, compressType: string): bytes

static async function isCompressorAvailable(compressType: string): boolean
static async function isDecompressorAvailable(compressType: string): boolean

static async function bytesLength(src: bytes): int64
static function serializeToPbBytes(request: any) : bytes;
static function deserializeFromPbBytes(data: bytes, statusCode: integer, headers: map[string]string) : any;
